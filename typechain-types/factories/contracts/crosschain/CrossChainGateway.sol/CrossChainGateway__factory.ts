/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  CrossChainGateway,
  CrossChainGatewayInterface,
} from "../../../../contracts/crosschain/CrossChainGateway.sol/CrossChainGateway";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "src",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "auction",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "bidder",
        type: "address",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "dst",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "auction",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "bidder",
        type: "address",
      },
    ],
    name: "Sent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "auction",
        type: "address",
      },
      {
        internalType: "bool",
        name: "allowed",
        type: "bool",
      },
    ],
    name: "allowAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowedAuctions",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "srcChainSelector",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract ICCIPRouterLike",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "dstChainSelector",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "auctionOnDst",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sendBid",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "r",
        type: "address",
      },
    ],
    name: "setRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620014cd380380620014cd833981810160405281019062000037919062000213565b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a4919062000256565b60405180910390fd5b620000be81620000e260201b60201c565b50620000db67a404cb67010c4c0b60c01b620001a660201b60201c565b5062000273565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001db82620001ae565b9050919050565b620001ed81620001ce565b8114620001f957600080fd5b50565b6000815190506200020d81620001e2565b92915050565b6000602082840312156200022c576200022b620001a9565b5b60006200023c84828501620001fc565b91505092915050565b6200025081620001ce565b82525050565b60006020820190506200026d600083018462000245565b92915050565b61124a80620002836000396000f3fe60806040526004361061008a5760003560e01c80638da5cb5b116100595780638da5cb5b1461012f578063ae8ff9991461015a578063c0d7865514610183578063f2fde38b146101ac578063f887ea40146101d557610091565b80631b9b67a7146100965780632f2593cf146100d35780635d77f828146100ef578063715018a61461011857610091565b3661009157005b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b89190610bdb565b610200565b6040516100ca9190610c23565b60405180910390f35b6100ed60048036038101906100e89190610cb4565b610220565b005b3480156100fb57600080fd5b5061011660048036038101906101119190610d47565b610499565b005b34801561012457600080fd5b5061012d61054c565b005b34801561013b57600080fd5b50610144610560565b6040516101519190610d96565b60405180910390f35b34801561016657600080fd5b50610181600480360381019061017c9190610e16565b610589565b005b34801561018f57600080fd5b506101aa60048036038101906101a59190610bdb565b6108d5565b005b3480156101b857600080fd5b506101d360048036038101906101ce9190610bdb565b610971565b005b3480156101e157600080fd5b506101ea6109f7565b6040516101f79190610ed5565b60405180910390f35b60026020528060005260406000206000915054906101000a900460ff1681565b6102346750dbc336761b906e60c01b610a1d565b61024867da503bf3ae79d08760c01b610a1d565b61025c67d9b088e24246d04560c01b610a1d565b61027067d0221317c1a521b760c01b610a1d565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166102fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f390610f4d565b60405180910390fd5b61031067c5027902240a0c4760c01b610a1d565b61032467a5aa8e91e52b64a460c01b610a1d565b61033867dbb23bf63598bf1860c01b610a1d565b6000838383336040516020016103519493929190610f7c565b60405160208183030381529060405290506103766743b641b48ae2ec6c60c01b610a1d565b61038a676948754c0356e9da60c01b610a1d565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639724418686836040518363ffffffff1660e01b81526004016103e7929190611060565b6020604051808303816000875af1158015610406573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042a91906110c6565b5061043f67f6812715484e18f260c01b610a1d565b6104536710fd865b94c80fa060c01b610a1d565b7f70c1ff18894879d9f6c7e87a902b4f8de55e622cb3ba58c25619dcfd17ace14a858585853360405161048a9594939291906110f3565b60405180910390a15050505050565b6104ad673349fd3717a1158660c01b610a1d565b6104b5610a20565b6104c967cf5b77dc43b887a760c01b610a1d565b6104dd6702ef5f6d837cf9b260c01b610a1d565b6104f1671fb6d6967b94844160c01b610a1d565b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b610554610a20565b61055e6000610aa7565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61059d679161d944dff6316160c01b610a1d565b6105b1672377e8fd455bde3e60c01b610a1d565b6105c56719c8750fca5521c160c01b610a1d565b60008060008085858101906105da9190611184565b93509350935093506105f6677f64f34db405205360c01b610a1d565b61060a6753879a3765ddcaad60c01b610a1d565b61061e672bc0b12f9460a86d60c01b610a1d565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166106aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a190610f4d565b60405180910390fd5b6106be6779439253457e353260c01b610a1d565b6106d267b089c44a2157cef760c01b610a1d565b6106e66726943e5287783b3660c01b610a1d565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107bc5761072e67acefa57959d5d02460c01b610a1d565b61074267c39738850bf7378860c01b610a1d565b61075667d72119d42cf27ce260c01b610a1d565b8373ffffffffffffffffffffffffffffffffffffffff166347fba09e836040518263ffffffff1660e01b81526004016000604051808303818588803b15801561079e57600080fd5b505af11580156107b2573d6000803e3d6000fd5b5050505050610866565b6107d067ec88b15fd4610d3860c01b610a1d565b6107e467f522bede921d4ac060c01b610a1d565b6107f867ff1175b7c4737cc360c01b610a1d565b8373ffffffffffffffffffffffffffffffffffffffff1663c6118c8584846040518363ffffffff1660e01b81526004016108339291906111eb565b600060405180830381600087803b15801561084d57600080fd5b505af1158015610861573d6000803e3d6000fd5b505050505b61087966880da7a446ba3760c01b610a1d565b61088d67f8932dc0de6fc9b360c01b610a1d565b7f4dc086224f654656e14d1f0a68c3412c8be213ef79cb2535a78333755df8b7c887858585856040516108c49594939291906110f3565b60405180910390a150505050505050565b6108e96772070a1239f8217460c01b610a1d565b6108f1610a20565b610905670ecba9475063624d60c01b610a1d565b61091967f90e750f92a64ea560c01b610a1d565b61092d67728c9646d28a631560c01b610a1d565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610979610a20565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109eb5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109e29190610d96565b60405180910390fd5b6109f481610aa7565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b50565b610a28610b6b565b73ffffffffffffffffffffffffffffffffffffffff16610a46610560565b73ffffffffffffffffffffffffffffffffffffffff1614610aa557610a69610b6b565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a9c9190610d96565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ba882610b7d565b9050919050565b610bb881610b9d565b8114610bc357600080fd5b50565b600081359050610bd581610baf565b92915050565b600060208284031215610bf157610bf0610b73565b5b6000610bff84828501610bc6565b91505092915050565b60008115159050919050565b610c1d81610c08565b82525050565b6000602082019050610c386000830184610c14565b92915050565b600067ffffffffffffffff82169050919050565b610c5b81610c3e565b8114610c6657600080fd5b50565b600081359050610c7881610c52565b92915050565b6000819050919050565b610c9181610c7e565b8114610c9c57600080fd5b50565b600081359050610cae81610c88565b92915050565b60008060008060808587031215610cce57610ccd610b73565b5b6000610cdc87828801610c69565b9450506020610ced87828801610bc6565b9350506040610cfe87828801610bc6565b9250506060610d0f87828801610c9f565b91505092959194509250565b610d2481610c08565b8114610d2f57600080fd5b50565b600081359050610d4181610d1b565b92915050565b60008060408385031215610d5e57610d5d610b73565b5b6000610d6c85828601610bc6565b9250506020610d7d85828601610d32565b9150509250929050565b610d9081610b9d565b82525050565b6000602082019050610dab6000830184610d87565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610dd657610dd5610db1565b5b8235905067ffffffffffffffff811115610df357610df2610db6565b5b602083019150836001820283011115610e0f57610e0e610dbb565b5b9250929050565b600080600060408486031215610e2f57610e2e610b73565b5b6000610e3d86828701610c69565b935050602084013567ffffffffffffffff811115610e5e57610e5d610b78565b5b610e6a86828701610dc0565b92509250509250925092565b6000819050919050565b6000610e9b610e96610e9184610b7d565b610e76565b610b7d565b9050919050565b6000610ead82610e80565b9050919050565b6000610ebf82610ea2565b9050919050565b610ecf81610eb4565b82525050565b6000602082019050610eea6000830184610ec6565b92915050565b600082825260208201905092915050565b7f61756374696f6e206e6f7420616c6c6f77656400000000000000000000000000600082015250565b6000610f37601383610ef0565b9150610f4282610f01565b602082019050919050565b60006020820190508181036000830152610f6681610f2a565b9050919050565b610f7681610c7e565b82525050565b6000608082019050610f916000830187610d87565b610f9e6020830186610d87565b610fab6040830185610f6d565b610fb86060830184610d87565b95945050505050565b610fca81610c3e565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561100a578082015181840152602081019050610fef565b60008484015250505050565b6000601f19601f8301169050919050565b600061103282610fd0565b61103c8185610fdb565b935061104c818560208601610fec565b61105581611016565b840191505092915050565b60006040820190506110756000830185610fc1565b81810360208301526110878184611027565b90509392505050565b6000819050919050565b6110a381611090565b81146110ae57600080fd5b50565b6000815190506110c08161109a565b92915050565b6000602082840312156110dc576110db610b73565b5b60006110ea848285016110b1565b91505092915050565b600060a0820190506111086000830188610fc1565b6111156020830187610d87565b6111226040830186610d87565b61112f6060830185610f6d565b61113c6080830184610d87565b9695505050505050565b600061115182610b7d565b9050919050565b61116181611146565b811461116c57600080fd5b50565b60008135905061117e81611158565b92915050565b6000806000806080858703121561119e5761119d610b73565b5b60006111ac8782880161116f565b94505060206111bd8782880161116f565b93505060406111ce87828801610c9f565b92505060606111df8782880161116f565b91505092959194509250565b60006040820190506112006000830185610d87565b61120d6020830184610f6d565b939250505056fea2646970667358221220181290963d22442d144dd2dd5cc56f04d16b58bcfd9be35850f7341636ff492c64736f6c63430008180033";

type CrossChainGatewayConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CrossChainGatewayConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CrossChainGateway__factory extends ContractFactory {
  constructor(...args: CrossChainGatewayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    owner_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(owner_, overrides || {});
  }
  override deploy(
    owner_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(owner_, overrides || {}) as Promise<
      CrossChainGateway & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CrossChainGateway__factory {
    return super.connect(runner) as CrossChainGateway__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrossChainGatewayInterface {
    return new Interface(_abi) as CrossChainGatewayInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CrossChainGateway {
    return new Contract(address, _abi, runner) as unknown as CrossChainGateway;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ICCIPRouterLike,
  ICCIPRouterLikeInterface,
} from "../../../../contracts/crosschain/CrossChainGateway.sol/ICCIPRouterLike";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint64",
        name: "dstChainSelector",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "ccipSend",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

export class ICCIPRouterLike__factory {
  static readonly abi = _abi;
  static createInterface(): ICCIPRouterLikeInterface {
    return new Interface(_abi) as ICCIPRouterLikeInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ICCIPRouterLike {
    return new Contract(address, _abi, runner) as unknown as ICCIPRouterLike;
  }
}

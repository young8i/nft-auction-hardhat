/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PriceOracle,
  PriceOracleInterface,
} from "../../contracts/PriceOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "NoFeed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxDelay",
        type: "uint256",
      },
    ],
    name: "StalePrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "FeedSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "seconds_",
        type: "uint256",
      },
    ],
    name: "MaxDelaySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "feeds",
    outputs: [
      {
        internalType: "contract AggregatorV3Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "contract AggregatorV3Interface",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "setFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "seconds_",
        type: "uint256",
      },
    ],
    name: "setMaxDelay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "toUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "usdValue",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052610e106002553480156200001757600080fd5b50604051620018223803806200182283398181016040528101906200003d919062000219565b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000b35760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000aa91906200025c565b60405180910390fd5b620000c481620000e860201b60201c565b50620000e167865bbebdb0e2884e60c01b620001ac60201b60201c565b5062000279565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001e182620001b4565b9050919050565b620001f381620001d4565b8114620001ff57600080fd5b50565b6000815190506200021381620001e8565b92915050565b600060208284031215620002325762000231620001af565b5b6000620002428482850162000202565b91505092915050565b6200025681620001d4565b82525050565b60006020820190506200027360008301846200024b565b92915050565b61159980620002896000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063715018a611610066578063715018a6146101315780638da5cb5b1461013b578063cd4f4a9c14610159578063ed49d2f814610189578063f2fde38b146101a757610093565b8063106ca3c3146100985780632fba4aa9146100b457806340b1eb10146100e457806341976e0914610100575b600080fd5b6100b260048036038101906100ad9190610e51565b6101c3565b005b6100ce60048036038101906100c99190610edc565b610284565b6040516100db9190610f68565b60405180910390f35b6100fe60048036038101906100f99190610fc1565b6102b7565b005b61011a60048036038101906101159190610edc565b610413565b604051610128929190611010565b60405180910390f35b61013961064e565b005b610143610662565b6040516101509190611048565b60405180910390f35b610173600480360381019061016e9190611063565b61068b565b60405161018091906110a3565b60405180910390f35b610191610c34565b60405161019e91906110a3565b60405180910390f35b6101c160048036038101906101bc9190610edc565b610c3a565b005b6101d7679c036cf70dfe0ce660c01b610cc0565b6101df610cc3565b6101f367c41daeb22b870a2c60c01b610cc0565b610207670cd136bb8861a10160c01b610cc0565b61021b67c507cb1afea482f760c01b610cc0565b8060028190555061023667c41235c8543db54460c01b610cc0565b61024a67e814c9f0c4b37c9560c01b610cc0565b7fa8f25bd2d170d29a4f557aa4693baa23609b53a1774cf878fb5032cd3756b1358160405161027991906110a3565b60405180910390a150565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6102cb67ab80c6e4fc2edfe460c01b610cc0565b6102d3610cc3565b6102e767ed03db12c0ea547a60c01b610cc0565b6102fb67960a40020b363e3560c01b610cc0565b61030f673e591fda2a28df8660c01b610cc0565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506103a167d406491313b8e90560c01b610cc0565b6103b56746ccd0135fc478e860c01b610cc0565b8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f3206e79c8cb385b303820bc579358c388d2f7539de2fa2f24644faf6bd0354d160405160405180910390a35050565b60008061042a670bacf6c51726cc2460c01b610cc0565b61043e67df39011df6d03ad360c01b610cc0565b6104526798d5fc2fd834d4c760c01b610cc0565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506104ca67457775ecfdd8b41360c01b610cc0565b6104de67c8a1af3463d6861760c01b610cc0565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105635761052667029531b121eeb88460c01b610cc0565b836040517f782387ad00000000000000000000000000000000000000000000000000000000815260040161055a9190611048565b60405180910390fd5b61057767905b22a619e3b4a560c01b610cc0565b61058b6768de3ea9746e6aa360c01b610cc0565b61059f67fc55ee1151a3c7af60c01b610cc0565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156105ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610611919061114b565b5093505092505061062c679907352bf0b7d99b60c01b610cc0565b61064067cf161710d922847860c01b610cc0565b818194509450505050915091565b610656610cc3565b6106606000610d4a565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006106a167a8dea1e9d65cc6af60c01b610cc0565b6106b5671d42df67793999c360c01b610cc0565b6106c9677f8b181bcdd1250f60c01b610cc0565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061074167d58e768cb7137f5a60c01b610cc0565b6107556751c69be5e92a198d60c01b610cc0565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107da5761079d675d7838a609e8c2bf60c01b610cc0565b836040517f782387ad0000000000000000000000000000000000000000000000000000000081526004016107d19190611048565b60405180910390fd5b6107ee6732ad18789280abce60c01b610cc0565b610802676005ae96ac2d461460c01b610cc0565b61081667734808f0e5939ad860c01b610cc0565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610864573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610888919061114b565b509350509250506108a36718206cdef1f0e3e260c01b610cc0565b6108b7678cc166642fe7611a60c01b610cc0565b42600254826108c691906111f5565b1015610923576108e0676a362f4f8d896df960c01b610cc0565b85816002546040517f91b46fd200000000000000000000000000000000000000000000000000000000815260040161091a93929190611229565b60405180910390fd5b61093767985026a204cc0db260c01b610cc0565b61094b673af7574e87c76c7560c01b610cc0565b61095f674f511da56d153bf560c01b610cc0565b60008373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d09190611299565b90506109e6674bffd2f3fc29dc1060c01b610cc0565b6109fa67660dff5d1b4c5d1060c01b610cc0565b610a0e670f49d529cf85b7f160c01b610cc0565b60088160ff1614610a54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4b90611323565b60405180910390fd5b610a6867f7ab97b8e16f55eb60c01b610cc0565b610a7c6742f473dbe54e220e60c01b610cc0565b610a9067b24aace61f5e9b4e60c01b610cc0565b6000839050610aa96730242d3b542e7ed160c01b610cc0565b610abd679eac845f10fbf11c60c01b610cc0565b600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1603610b3f57610b0567a1bff6df6ea4fe0260c01b610cc0565b610b1967edf4eaa82a3ae60b60c01b610cc0565b670de0b6b3a76400008188610b2e9190611343565b610b3891906113b4565b9550610c29565b610b5367c554f6e31d4d934a60c01b610cc0565b610b676768800fcb2cb4638460c01b610cc0565b610b7b67fa55c958733ffd0660c01b610cc0565b60008873ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bec9190611299565b9050610c0267a8f6e02f1abaf2b960c01b610cc0565b80600a610c0f9190611518565b8289610c1b9190611343565b610c2591906113b4565b9650505b505050505092915050565b60025481565b610c42610cc3565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cb45760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610cab9190611048565b60405180910390fd5b610cbd81610d4a565b50565b50565b610ccb610e0e565b73ffffffffffffffffffffffffffffffffffffffff16610ce9610662565b73ffffffffffffffffffffffffffffffffffffffff1614610d4857610d0c610e0e565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d3f9190611048565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b6000819050919050565b610e2e81610e1b565b8114610e3957600080fd5b50565b600081359050610e4b81610e25565b92915050565b600060208284031215610e6757610e66610e16565b5b6000610e7584828501610e3c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ea982610e7e565b9050919050565b610eb981610e9e565b8114610ec457600080fd5b50565b600081359050610ed681610eb0565b92915050565b600060208284031215610ef257610ef1610e16565b5b6000610f0084828501610ec7565b91505092915050565b6000819050919050565b6000610f2e610f29610f2484610e7e565b610f09565b610e7e565b9050919050565b6000610f4082610f13565b9050919050565b6000610f5282610f35565b9050919050565b610f6281610f47565b82525050565b6000602082019050610f7d6000830184610f59565b92915050565b6000610f8e82610e9e565b9050919050565b610f9e81610f83565b8114610fa957600080fd5b50565b600081359050610fbb81610f95565b92915050565b60008060408385031215610fd857610fd7610e16565b5b6000610fe685828601610ec7565b9250506020610ff785828601610fac565b9150509250929050565b61100a81610e1b565b82525050565b60006040820190506110256000830185611001565b6110326020830184611001565b9392505050565b61104281610e9e565b82525050565b600060208201905061105d6000830184611039565b92915050565b6000806040838503121561107a57611079610e16565b5b600061108885828601610ec7565b925050602061109985828601610e3c565b9150509250929050565b60006020820190506110b86000830184611001565b92915050565b600069ffffffffffffffffffff82169050919050565b6110dd816110be565b81146110e857600080fd5b50565b6000815190506110fa816110d4565b92915050565b6000819050919050565b61111381611100565b811461111e57600080fd5b50565b6000815190506111308161110a565b92915050565b60008151905061114581610e25565b92915050565b600080600080600060a0868803121561116757611166610e16565b5b6000611175888289016110eb565b955050602061118688828901611121565b945050604061119788828901611136565b93505060606111a888828901611136565b92505060806111b9888289016110eb565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061120082610e1b565b915061120b83610e1b565b9250828201905080821115611223576112226111c6565b5b92915050565b600060608201905061123e6000830186611039565b61124b6020830185611001565b6112586040830184611001565b949350505050565b600060ff82169050919050565b61127681611260565b811461128157600080fd5b50565b6000815190506112938161126d565b92915050565b6000602082840312156112af576112ae610e16565b5b60006112bd84828501611284565b91505092915050565b600082825260208201905092915050565b7f507269636520646563696d616c7320213d203800000000000000000000000000600082015250565b600061130d6013836112c6565b9150611318826112d7565b602082019050919050565b6000602082019050818103600083015261133c81611300565b9050919050565b600061134e82610e1b565b915061135983610e1b565b925082820261136781610e1b565b9150828204841483151761137e5761137d6111c6565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006113bf82610e1b565b91506113ca83610e1b565b9250826113da576113d9611385565b5b828204905092915050565b60008160011c9050919050565b6000808291508390505b600185111561143c57808604811115611418576114176111c6565b5b60018516156114275780820291505b8081029050611435856113e5565b94506113fc565b94509492505050565b6000826114555760019050611511565b816114635760009050611511565b81600181146114795760028114611483576114b2565b6001915050611511565b60ff841115611495576114946111c6565b5b8360020a9150848211156114ac576114ab6111c6565b5b50611511565b5060208310610133831016604e8410600b84101617156114e75782820a9050838111156114e2576114e16111c6565b5b611511565b6114f484848460016113f2565b9250905081840481111561150b5761150a6111c6565b5b81810290505b9392505050565b600061152382610e1b565b915061152e83611260565b925061155b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611445565b90509291505056fea264697066735822122064f8eef5db940acef2e5a5a212ae1eccee3be77e7296221112c8967ce8a1e99864736f6c63430008180033";

type PriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PriceOracle__factory extends ContractFactory {
  constructor(...args: PriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    owner_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(owner_, overrides || {});
  }
  override deploy(
    owner_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(owner_, overrides || {}) as Promise<
      PriceOracle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PriceOracle__factory {
    return super.connect(runner) as PriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PriceOracleInterface {
    return new Interface(_abi) as PriceOracleInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PriceOracle {
    return new Contract(address, _abi, runner) as unknown as PriceOracle;
  }
}

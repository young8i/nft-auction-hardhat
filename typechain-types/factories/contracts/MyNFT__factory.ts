/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { MyNFT, MyNFTInterface } from "../../contracts/MyNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "string",
        name: "baseURI_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newBase",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260016007553480156200001657600080fd5b5060405162001655380380620016558339810160408190526200003991620001c9565b33838360006200004a8382620002eb565b506001620000598282620002eb565b5050506001600160a01b0381166200008b57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6200009681620000af565b506008620000a58282620002eb565b50505050620003b7565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200012957600080fd5b81516001600160401b038082111562000146576200014662000101565b604051601f8301601f19908116603f0116810190828211818310171562000171576200017162000101565b81604052838152602092508660208588010111156200018f57600080fd5b600091505b83821015620001b3578582018301518183018401529082019062000194565b6000602085830101528094505050505092915050565b600080600060608486031215620001df57600080fd5b83516001600160401b0380821115620001f757600080fd5b620002058783880162000117565b945060208601519150808211156200021c57600080fd5b6200022a8783880162000117565b935060408601519150808211156200024157600080fd5b50620002508682870162000117565b9150509250925092565b600181811c908216806200026f57607f821691505b6020821081036200029057634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002e6576000816000526020600020601f850160051c81016020861015620002c15750805b601f850160051c820191505b81811015620002e257828155600101620002cd565b5050505b505050565b81516001600160401b0381111562000307576200030762000101565b6200031f816200031884546200025a565b8462000296565b602080601f8311600181146200035757600084156200033e5750858301515b600019600386901b1c1916600185901b178555620002e2565b600085815260208120601f198616915b82811015620003885788860151825594840194600190910190840162000367565b5085821015620003a75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61128e80620003c76000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a2578063a22cb46511610071578063a22cb46514610239578063b88d4fde1461024c578063c87b56dd1461025f578063e985e9c514610272578063f2fde38b1461028557600080fd5b806370a0823114610205578063715018a6146102185780638da5cb5b1461022057806395d89b411461023157600080fd5b806323b872dd116100e957806323b872dd1461019857806342842e0e146101ab57806355f804b3146101be5780636352211e146101d15780636a627842146101e457600080fd5b806301ffc9a71461011b57806306fdde0314610143578063081812fc14610158578063095ea7b314610183575b600080fd5b61012e610129366004610d62565b610298565b60405190151581526020015b60405180910390f35b61014b6102ea565b60405161013a9190610dcf565b61016b610166366004610de2565b61037c565b6040516001600160a01b03909116815260200161013a565b610196610191366004610e12565b6103a5565b005b6101966101a6366004610e3c565b6103b4565b6101966101b9366004610e3c565b610444565b6101966101cc366004610e78565b610464565b61016b6101df366004610de2565b610479565b6101f76101f2366004610eea565b610484565b60405190815260200161013a565b6101f7610213366004610eea565b6104b3565b6101966104fb565b6006546001600160a01b031661016b565b61014b61050f565b610196610247366004610f05565b61051e565b61019661025a366004610f57565b610529565b61014b61026d366004610de2565b610541565b61012e610280366004611033565b6105a9565b610196610293366004610eea565b6105d7565b60006001600160e01b031982166380ac58cd60e01b14806102c957506001600160e01b03198216635b5e139f60e01b145b806102e457506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102f990611066565b80601f016020809104026020016040519081016040528092919081815260200182805461032590611066565b80156103725780601f1061034757610100808354040283529160200191610372565b820191906000526020600020905b81548152906001019060200180831161035557829003601f168201915b5050505050905090565b600061038782610615565b506000828152600460205260409020546001600160a01b03166102e4565b6103b082823361064e565b5050565b6001600160a01b0382166103e357604051633250574960e11b8152600060048201526024015b60405180910390fd5b60006103f083833361065b565b9050836001600160a01b0316816001600160a01b03161461043e576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016103da565b50505050565b61045f83838360405180602001604052806000815250610529565b505050565b61046c610754565b600861045f8284836110e8565b60006102e482610615565b600061048e610754565b6007805490600061049e836111a8565b9190505590506104ae8282610781565b919050565b60006001600160a01b0382166104df576040516322718ad960e21b8152600060048201526024016103da565b506001600160a01b031660009081526003602052604090205490565b610503610754565b61050d60006107e6565b565b6060600180546102f990611066565b6103b0338383610838565b6105348484846103b4565b61043e33858585856108d7565b606061054c82610615565b506000610557610a02565b9050600081511161057757604051806020016040528060008152506105a2565b8061058184610a11565b6040516020016105929291906111cf565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6105df610754565b6001600160a01b03811661060957604051631e4fbdf760e01b8152600060048201526024016103da565b610612816107e6565b50565b6000818152600260205260408120546001600160a01b0316806102e457604051637e27328960e01b8152600481018490526024016103da565b61045f8383836001610aa4565b6000828152600260205260408120546001600160a01b039081169083161561068857610688818486610baa565b6001600160a01b038116156106c6576106a5600085600080610aa4565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b038516156106f5576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6006546001600160a01b0316331461050d5760405163118cdaa760e01b81523360048201526024016103da565b6001600160a01b0382166107ab57604051633250574960e11b8152600060048201526024016103da565b60006107b98383600061065b565b90506001600160a01b0381161561045f576040516339e3563760e11b8152600060048201526024016103da565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661086a57604051630b61174360e31b81526001600160a01b03831660048201526024016103da565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b156109fb57604051630a85bd0160e11b81526001600160a01b0384169063150b7a02906109199088908890879087906004016111fe565b6020604051808303816000875af1925050508015610954575060408051601f3d908101601f191682019092526109519181019061123b565b60015b6109bd573d808015610982576040519150601f19603f3d011682016040523d82523d6000602084013e610987565b606091505b5080516000036109b557604051633250574960e11b81526001600160a01b03851660048201526024016103da565b805160208201fd5b6001600160e01b03198116630a85bd0160e11b146109f957604051633250574960e11b81526001600160a01b03851660048201526024016103da565b505b5050505050565b6060600880546102f990611066565b60606000610a1e83610c0e565b600101905060008167ffffffffffffffff811115610a3e57610a3e610f41565b6040519080825280601f01601f191660200182016040528015610a68576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610a7257509392505050565b8080610ab857506001600160a01b03821615155b15610b7a576000610ac884610615565b90506001600160a01b03831615801590610af45750826001600160a01b0316816001600160a01b031614155b8015610b075750610b0581846105a9565b155b15610b305760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016103da565b8115610b785783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610bb5838383610ce6565b61045f576001600160a01b038316610be357604051637e27328960e01b8152600481018290526024016103da565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016103da565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610c4d5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610c79576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610c9757662386f26fc10000830492506010015b6305f5e1008310610caf576305f5e100830492506008015b6127108310610cc357612710830492506004015b60648310610cd5576064830492506002015b600a83106102e45760010192915050565b60006001600160a01b03831615801590610d445750826001600160a01b0316846001600160a01b03161480610d205750610d2084846105a9565b80610d4457506000828152600460205260409020546001600160a01b038481169116145b949350505050565b6001600160e01b03198116811461061257600080fd5b600060208284031215610d7457600080fd5b81356105a281610d4c565b60005b83811015610d9a578181015183820152602001610d82565b50506000910152565b60008151808452610dbb816020860160208601610d7f565b601f01601f19169290920160200192915050565b6020815260006105a26020830184610da3565b600060208284031215610df457600080fd5b5035919050565b80356001600160a01b03811681146104ae57600080fd5b60008060408385031215610e2557600080fd5b610e2e83610dfb565b946020939093013593505050565b600080600060608486031215610e5157600080fd5b610e5a84610dfb565b9250610e6860208501610dfb565b9150604084013590509250925092565b60008060208385031215610e8b57600080fd5b823567ffffffffffffffff80821115610ea357600080fd5b818501915085601f830112610eb757600080fd5b813581811115610ec657600080fd5b866020828501011115610ed857600080fd5b60209290920196919550909350505050565b600060208284031215610efc57600080fd5b6105a282610dfb565b60008060408385031215610f1857600080fd5b610f2183610dfb565b915060208301358015158114610f3657600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610f6d57600080fd5b610f7685610dfb565b9350610f8460208601610dfb565b925060408501359150606085013567ffffffffffffffff80821115610fa857600080fd5b818701915087601f830112610fbc57600080fd5b813581811115610fce57610fce610f41565b604051601f8201601f19908116603f01168101908382118183101715610ff657610ff6610f41565b816040528281528a602084870101111561100f57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561104657600080fd5b61104f83610dfb565b915061105d60208401610dfb565b90509250929050565b600181811c9082168061107a57607f821691505b60208210810361109a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561045f576000816000526020600020601f850160051c810160208610156110c95750805b601f850160051c820191505b818110156109f9578281556001016110d5565b67ffffffffffffffff83111561110057611100610f41565b6111148361110e8354611066565b836110a0565b6000601f84116001811461114857600085156111305750838201355b600019600387901b1c1916600186901b1783556109fb565b600083815260209020601f19861690835b828110156111795786850135825560209485019460019092019101611159565b50868210156111965760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b6000600182016111c857634e487b7160e01b600052601160045260246000fd5b5060010190565b600083516111e1818460208801610d7f565b8351908301906111f5818360208801610d7f565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061123190830184610da3565b9695505050505050565b60006020828403121561124d57600080fd5b81516105a281610d4c56fea264697066735822122031848e461f2ce536cd09e430f864a804132ad783cb770b1e48e483b282bc167a64736f6c63430008180033";

type MyNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyNFT__factory extends ContractFactory {
  constructor(...args: MyNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name_: string,
    symbol_: string,
    baseURI_: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name_,
      symbol_,
      baseURI_,
      overrides || {}
    );
  }
  override deploy(
    name_: string,
    symbol_: string,
    baseURI_: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name_, symbol_, baseURI_, overrides || {}) as Promise<
      MyNFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MyNFT__factory {
    return super.connect(runner) as MyNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyNFTInterface {
    return new Interface(_abi) as MyNFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MyNFT {
    return new Contract(address, _abi, runner) as unknown as MyNFT;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { MyNFT, MyNFTInterface } from "../../contracts/MyNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "string",
        name: "baseURI_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newBase",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260016007553480156200001657600080fd5b5060405162002dd438038062002dd483398181016040528101906200003c91906200039b565b33838381600090816200005091906200069f565b5080600190816200006291906200069f565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000da5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000d19190620007cb565b60405180910390fd5b620000eb816200013f60201b60201c565b506200010867cd228673512d603860c01b6200020560201b60201c565b6200012467f73cb6fe4188b9d160c01b6200020560201b60201c565b80600890816200013591906200069f565b50505050620007e8565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620002718262000226565b810181811067ffffffffffffffff8211171562000293576200029262000237565b5b80604052505050565b6000620002a862000208565b9050620002b6828262000266565b919050565b600067ffffffffffffffff821115620002d957620002d862000237565b5b620002e48262000226565b9050602081019050919050565b60005b8381101562000311578082015181840152602081019050620002f4565b60008484015250505050565b6000620003346200032e84620002bb565b6200029c565b90508281526020810184848401111562000353576200035262000221565b5b62000360848285620002f1565b509392505050565b600082601f83011262000380576200037f6200021c565b5b8151620003928482602086016200031d565b91505092915050565b600080600060608486031215620003b757620003b662000212565b5b600084015167ffffffffffffffff811115620003d857620003d762000217565b5b620003e68682870162000368565b935050602084015167ffffffffffffffff8111156200040a576200040962000217565b5b620004188682870162000368565b925050604084015167ffffffffffffffff8111156200043c576200043b62000217565b5b6200044a8682870162000368565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620004a757607f821691505b602082108103620004bd57620004bc6200045f565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005277fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620004e8565b620005338683620004e8565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620005806200057a62000574846200054b565b62000555565b6200054b565b9050919050565b6000819050919050565b6200059c836200055f565b620005b4620005ab8262000587565b848454620004f5565b825550505050565b600090565b620005cb620005bc565b620005d881848462000591565b505050565b5b818110156200060057620005f4600082620005c1565b600181019050620005de565b5050565b601f8211156200064f576200061981620004c3565b6200062484620004d8565b8101602085101562000634578190505b6200064c6200064385620004d8565b830182620005dd565b50505b505050565b600082821c905092915050565b6000620006746000198460080262000654565b1980831691505092915050565b60006200068f838362000661565b9150826002028217905092915050565b620006aa8262000454565b67ffffffffffffffff811115620006c657620006c562000237565b5b620006d282546200048e565b620006df82828562000604565b600060209050601f83116001811462000717576000841562000702578287015190505b6200070e858262000681565b8655506200077e565b601f1984166200072786620004c3565b60005b8281101562000751578489015182556001820191506020850194506020810190506200072a565b868310156200077157848901516200076d601f89168262000661565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620007b38262000786565b9050919050565b620007c581620007a6565b82525050565b6000602082019050620007e26000830184620007ba565b92915050565b6125dc80620007f86000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a2578063a22cb46511610071578063a22cb465146102df578063b88d4fde146102fb578063c87b56dd14610317578063e985e9c514610347578063f2fde38b1461037757610116565b806370a0823114610269578063715018a6146102995780638da5cb5b146102a357806395d89b41146102c157610116565b806323b872dd116100e957806323b872dd146101b557806342842e0e146101d157806355f804b3146101ed5780636352211e146102095780636a6278421461023957610116565b806301ffc9a71461011b57806306fdde031461014b578063081812fc14610169578063095ea7b314610199575b600080fd5b61013560048036038101906101309190611a7b565b610393565b6040516101429190611ac3565b60405180910390f35b610153610475565b6040516101609190611b6e565b60405180910390f35b610183600480360381019061017e9190611bc6565b610507565b6040516101909190611c34565b60405180910390f35b6101b360048036038101906101ae9190611c7b565b610523565b005b6101cf60048036038101906101ca9190611cbb565b610539565b005b6101eb60048036038101906101e69190611cbb565b61063b565b005b61020760048036038101906102029190611d73565b61065b565b005b610223600480360381019061021e9190611bc6565b6106c9565b6040516102309190611c34565b60405180910390f35b610253600480360381019061024e9190611dc0565b6106db565b6040516102609190611dfc565b60405180910390f35b610283600480360381019061027e9190611dc0565b610785565b6040516102909190611dfc565b60405180910390f35b6102a161083f565b005b6102ab610853565b6040516102b89190611c34565b60405180910390f35b6102c961087d565b6040516102d69190611b6e565b60405180910390f35b6102f960048036038101906102f49190611e43565b61090f565b005b61031560048036038101906103109190611fb3565b610925565b005b610331600480360381019061032c9190611bc6565b61094a565b60405161033e9190611b6e565b60405180910390f35b610361600480360381019061035c9190612036565b6109b3565b60405161036e9190611ac3565b60405180910390f35b610391600480360381019061038c9190611dc0565b610a47565b005b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061045e57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061046e575061046d82610acd565b5b9050919050565b606060008054610484906120a5565b80601f01602080910402602001604051908101604052809291908181526020018280546104b0906120a5565b80156104fd5780601f106104d2576101008083540402835291602001916104fd565b820191906000526020600020905b8154815290600101906020018083116104e057829003601f168201915b5050505050905090565b600061051282610b37565b5061051c82610bbf565b9050919050565b6105358282610530610bfc565b610c04565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105ab5760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105a29190611c34565b60405180910390fd5b60006105bf83836105ba610bfc565b610c16565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610635578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161062c939291906120d6565b60405180910390fd5b50505050565b61065683838360405180602001604052806000815250610925565b505050565b61066f6746391ce093c4636960c01b610e30565b610677610e33565b61068b67857eb99db42f8d3360c01b610e30565b61069f6708bb777a77c7a43260c01b610e30565b6106b36789911b372b07de1360c01b610e30565b8181600891826106c49291906122c4565b505050565b60006106d482610b37565b9050919050565b60006106f1673d8a3443047c7e0860c01b610e30565b6106f9610e33565b61070d6794c33f8f1ead094160c01b610e30565b610721671efa0793d04ece0160c01b610e30565b61073567ad5273625848a1ac60c01b610e30565b60076000815480929190610748906123c3565b91905055905061076267785e509efb58a25f60c01b610e30565b6107766712eff903ccaef81860c01b610e30565b6107808282610eba565b919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107f85760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016107ef9190611c34565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610847610e33565b6108516000610fb3565b565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606001805461088c906120a5565b80601f01602080910402602001604051908101604052809291908181526020018280546108b8906120a5565b80156109055780601f106108da57610100808354040283529160200191610905565b820191906000526020600020905b8154815290600101906020018083116108e857829003601f168201915b5050505050905090565b61092161091a610bfc565b8383611079565b5050565b610930848484610539565b61094461093b610bfc565b858585856111e8565b50505050565b606061095582610b37565b506000610960611399565b9050600081511161098057604051806020016040528060008152506109ab565b8061098a84611467565b60405160200161099b929190612447565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610a4f610e33565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ac15760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610ab89190611c34565b60405180910390fd5b610aca81610fb3565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600080610b4383611535565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610bb657826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610bad9190611dfc565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610c118383836001611572565b505050565b600080610c2284611535565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610c6457610c63818486611737565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610cf557610ca6600085600080611572565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610d78576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b50565b610e3b610bfc565b73ffffffffffffffffffffffffffffffffffffffff16610e59610853565b73ffffffffffffffffffffffffffffffffffffffff1614610eb857610e7c610bfc565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610eaf9190611c34565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f2c5760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610f239190611c34565b60405180910390fd5b6000610f3a83836000610c16565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610fae5760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401610fa59190611c34565b60405180910390fd5b505050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110ea57816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016110e19190611c34565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516111db9190611ac3565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115611392578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b815260040161124794939291906124c0565b6020604051808303816000875af192505050801561128357506040513d601f19601f820116820180604052508101906112809190612521565b60015b611307573d80600081146112b3576040519150601f19603f3d011682016040523d82523d6000602084013e6112b8565b606091505b5060008151036112ff57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112f69190611c34565b60405180910390fd5b805160208201fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461139057836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016113879190611c34565b60405180910390fd5b505b5050505050565b60606113af673c29adc45570a1ab60c01b610e30565b6113c367ea8fb66810a4d7da60c01b610e30565b6113d7674998c99869079b3060c01b610e30565b600880546113e4906120a5565b80601f0160208091040260200160405190810160405280929190818152602001828054611410906120a5565b801561145d5780601f106114325761010080835404028352916020019161145d565b820191906000526020600020905b81548152906001019060200180831161144057829003601f168201915b5050505050905090565b606060006001611476846117fb565b01905060008167ffffffffffffffff81111561149557611494611e88565b5b6040519080825280601f01601f1916602001820160405280156114c75781602001600182028036833780820191505090505b509050600082602083010190505b60011561152a578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161151e5761151d61254e565b5b049450600085036114d5575b819350505050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806115ab5750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156116df5760006115bb84610b37565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561162657508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015611639575061163781846109b3565b155b1561167b57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016116729190611c34565b60405180910390fd5b81156116dd57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b61174283838361194e565b6117f657600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036117b757806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016117ae9190611dfc565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016117ed92919061257d565b60405180910390fd5b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611859577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161184f5761184e61254e565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611896576d04ee2d6d415b85acef8100000000838161188c5761188b61254e565b5b0492506020810190505b662386f26fc1000083106118c557662386f26fc1000083816118bb576118ba61254e565b5b0492506010810190505b6305f5e10083106118ee576305f5e10083816118e4576118e361254e565b5b0492506008810190505b61271083106119135761271083816119095761190861254e565b5b0492506004810190505b60648310611936576064838161192c5761192b61254e565b5b0492506002810190505b600a8310611945576001810190505b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611a0657508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806119c757506119c684846109b3565b5b80611a0557508273ffffffffffffffffffffffffffffffffffffffff166119ed83610bbf565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611a5881611a23565b8114611a6357600080fd5b50565b600081359050611a7581611a4f565b92915050565b600060208284031215611a9157611a90611a19565b5b6000611a9f84828501611a66565b91505092915050565b60008115159050919050565b611abd81611aa8565b82525050565b6000602082019050611ad86000830184611ab4565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611b18578082015181840152602081019050611afd565b60008484015250505050565b6000601f19601f8301169050919050565b6000611b4082611ade565b611b4a8185611ae9565b9350611b5a818560208601611afa565b611b6381611b24565b840191505092915050565b60006020820190508181036000830152611b888184611b35565b905092915050565b6000819050919050565b611ba381611b90565b8114611bae57600080fd5b50565b600081359050611bc081611b9a565b92915050565b600060208284031215611bdc57611bdb611a19565b5b6000611bea84828501611bb1565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611c1e82611bf3565b9050919050565b611c2e81611c13565b82525050565b6000602082019050611c496000830184611c25565b92915050565b611c5881611c13565b8114611c6357600080fd5b50565b600081359050611c7581611c4f565b92915050565b60008060408385031215611c9257611c91611a19565b5b6000611ca085828601611c66565b9250506020611cb185828601611bb1565b9150509250929050565b600080600060608486031215611cd457611cd3611a19565b5b6000611ce286828701611c66565b9350506020611cf386828701611c66565b9250506040611d0486828701611bb1565b9150509250925092565b600080fd5b600080fd5b600080fd5b60008083601f840112611d3357611d32611d0e565b5b8235905067ffffffffffffffff811115611d5057611d4f611d13565b5b602083019150836001820283011115611d6c57611d6b611d18565b5b9250929050565b60008060208385031215611d8a57611d89611a19565b5b600083013567ffffffffffffffff811115611da857611da7611a1e565b5b611db485828601611d1d565b92509250509250929050565b600060208284031215611dd657611dd5611a19565b5b6000611de484828501611c66565b91505092915050565b611df681611b90565b82525050565b6000602082019050611e116000830184611ded565b92915050565b611e2081611aa8565b8114611e2b57600080fd5b50565b600081359050611e3d81611e17565b92915050565b60008060408385031215611e5a57611e59611a19565b5b6000611e6885828601611c66565b9250506020611e7985828601611e2e565b9150509250929050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611ec082611b24565b810181811067ffffffffffffffff82111715611edf57611ede611e88565b5b80604052505050565b6000611ef2611a0f565b9050611efe8282611eb7565b919050565b600067ffffffffffffffff821115611f1e57611f1d611e88565b5b611f2782611b24565b9050602081019050919050565b82818337600083830152505050565b6000611f56611f5184611f03565b611ee8565b905082815260208101848484011115611f7257611f71611e83565b5b611f7d848285611f34565b509392505050565b600082601f830112611f9a57611f99611d0e565b5b8135611faa848260208601611f43565b91505092915050565b60008060008060808587031215611fcd57611fcc611a19565b5b6000611fdb87828801611c66565b9450506020611fec87828801611c66565b9350506040611ffd87828801611bb1565b925050606085013567ffffffffffffffff81111561201e5761201d611a1e565b5b61202a87828801611f85565b91505092959194509250565b6000806040838503121561204d5761204c611a19565b5b600061205b85828601611c66565b925050602061206c85828601611c66565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806120bd57607f821691505b6020821081036120d0576120cf612076565b5b50919050565b60006060820190506120eb6000830186611c25565b6120f86020830185611ded565b6121056040830184611c25565b949350505050565b600082905092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261217a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261213d565b612184868361213d565b95508019841693508086168417925050509392505050565b6000819050919050565b60006121c16121bc6121b784611b90565b61219c565b611b90565b9050919050565b6000819050919050565b6121db836121a6565b6121ef6121e7826121c8565b84845461214a565b825550505050565b600090565b6122046121f7565b61220f8184846121d2565b505050565b5b81811015612233576122286000826121fc565b600181019050612215565b5050565b601f8211156122785761224981612118565b6122528461212d565b81016020851015612261578190505b61227561226d8561212d565b830182612214565b50505b505050565b600082821c905092915050565b600061229b6000198460080261227d565b1980831691505092915050565b60006122b4838361228a565b9150826002028217905092915050565b6122ce838361210d565b67ffffffffffffffff8111156122e7576122e6611e88565b5b6122f182546120a5565b6122fc828285612237565b6000601f83116001811461232b5760008415612319578287013590505b61232385826122a8565b86555061238b565b601f19841661233986612118565b60005b828110156123615784890135825560018201915060208501945060208101905061233c565b8683101561237e578489013561237a601f89168261228a565b8355505b6001600288020188555050505b50505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006123ce82611b90565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612400576123ff612394565b5b600182019050919050565b600081905092915050565b600061242182611ade565b61242b818561240b565b935061243b818560208601611afa565b80840191505092915050565b60006124538285612416565b915061245f8284612416565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b60006124928261246b565b61249c8185612476565b93506124ac818560208601611afa565b6124b581611b24565b840191505092915050565b60006080820190506124d56000830187611c25565b6124e26020830186611c25565b6124ef6040830185611ded565b81810360608301526125018184612487565b905095945050505050565b60008151905061251b81611a4f565b92915050565b60006020828403121561253757612536611a19565b5b60006125458482850161250c565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006040820190506125926000830185611c25565b61259f6020830184611ded565b939250505056fea2646970667358221220c18351df134aace989c7f2eb8e6a328ec5a388d7cd18d6b0ac97de54a1f16eaf64736f6c63430008180033";

type MyNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyNFT__factory extends ContractFactory {
  constructor(...args: MyNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name_: string,
    symbol_: string,
    baseURI_: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name_,
      symbol_,
      baseURI_,
      overrides || {}
    );
  }
  override deploy(
    name_: string,
    symbol_: string,
    baseURI_: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name_, symbol_, baseURI_, overrides || {}) as Promise<
      MyNFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MyNFT__factory {
    return super.connect(runner) as MyNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyNFTInterface {
    return new Interface(_abi) as MyNFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MyNFT {
    return new Contract(address, _abi, runner) as unknown as MyNFT;
  }
}
